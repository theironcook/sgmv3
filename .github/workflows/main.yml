# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get SaasGlue auth token
        uses: actionsflow/axios@v1
        id: auth
        with:
          url: "https://console.saasglue.com/login/apiLogin"
          method: POST
          accept: 200
          data: '{"accessKeyId": "TG70TUIDVD2UZWM8AI9Y","accessKeySecret": "132c9a51f9ac54227fccf7d5b54353dacaf91571"}'

      - id: get-auth-outputs
        uses: actions/github-script@0.9.0
        with:
          script: |
            const tokens = ${{ steps.auth.outputs.data }};
            core.setOutput('teamId', tokens.config3)
            core.setOutput('token', tokens.config1)
      
      - name: Run SaasGlue job
        uses: actionsflow/axios@v1
        with:
          # The target url
          url: "https://console.saasglue.com/api/v0/job" # optional
          # The request method, basically one of GET, POST, PUT, PATCH
          method: POST # optional, default is GET
          # List of status codes to be accepted, else it is considerred to be failed
          accept: 201 # optional, default is 200201204
          # Headers object
          headers: '{"_jobDefId":"61be5e6505d07f0018939f49","_teamid":"${{ steps.get-auth-outputs.outputs.teamId }}","auth":"${{ steps.get-auth-outputs.outputs.token }}"}' # optional
          # Content-Type, if data is json string, th default value will be application/json
          data: '{"runtimeVars": {"repo_name":"${{ github.event.repository.name }}"}}'
          content-type: "" # optional
